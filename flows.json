[
    {
        "id": "d8f87e00334234e5",
        "type": "tab",
        "label": "Project_CK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a141030fc90cf8c6",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "Verify Login",
        "func": "if (msg.payload.username === 'admin' && msg.payload.password === 'admin')\n    msg.payload = {\n        \"tab\": \"Home\",\n        \"tabs\": {\n            \"show\": [\"Home\"],\n            \"hide\": [\"Login\"],\n        }\n    };\nelse \n    msg.payload = \"Wrong password or username! Please try again.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 220,
        "wires": [
            [
                "90cb500a4d53b452",
                "fb1e31a662b3765b"
            ]
        ]
    },
    {
        "id": "90cb500a4d53b452",
        "type": "ui_ui_control",
        "z": "d8f87e00334234e5",
        "name": "",
        "events": "all",
        "x": 720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b3db52ae779d1935",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "4738d4e559d7757c"
            ]
        ]
    },
    {
        "id": "4738d4e559d7757c",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "Jump to Login and disable Home",
        "func": "msg.payload = {\n    \"tab\": \"Login\",\n    \"tabs\": {\n        \"hide\": [\"Home\"]\n    }\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "06a26c95c7539f7c"
            ]
        ]
    },
    {
        "id": "06a26c95c7539f7c",
        "type": "ui_ui_control",
        "z": "d8f87e00334234e5",
        "name": "",
        "events": "all",
        "x": 820,
        "y": 120,
        "wires": [
            [
                "b6ee238b1ac1ee20"
            ]
        ]
    },
    {
        "id": "3f56a2860a79ba4c",
        "type": "ui_toast",
        "z": "d8f87e00334234e5",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "fb1e31a662b3765b",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "Check if try again msg",
        "func": "if (typeof msg.payload === 'string')\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 320,
        "wires": [
            [
                "3f56a2860a79ba4c"
            ]
        ]
    },
    {
        "id": "92d92e2c89dd5885",
        "type": "ui_form",
        "z": "d8f87e00334234e5",
        "name": "",
        "label": "",
        "group": "d86330bc58d8059b",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "a141030fc90cf8c6"
            ]
        ]
    },
    {
        "id": "1d325a11245b81f1",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "7ed56f2af3599580",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lock status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "lockVal",
        "style": false,
        "font": "",
        "fontSize": "30",
        "color": "#000000",
        "x": 550,
        "y": 500,
        "wires": []
    },
    {
        "id": "1cd1a76a908a7ca1",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "f59725da85da0bf6",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21CLC03",
        "format": "Group 12",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1460,
        "wires": []
    },
    {
        "id": "f0bd680dd444a40d",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "f59725da85da0bf6",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127089",
        "format": "Nguyễn Tuấn Kiệt (Leader)",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ee2bb954fe87c300",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "f59725da85da0bf6",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127119",
        "format": "Phạm Ánh Như Ngọc",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1560,
        "wires": []
    },
    {
        "id": "fc0e4b79d8b2705a",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "f59725da85da0bf6",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127620",
        "format": "Trần Hoàng Khải",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1600,
        "wires": []
    },
    {
        "id": "b0123b7e084a2a5b",
        "type": "ui_chart",
        "z": "d8f87e00334234e5",
        "name": "",
        "group": "e6db27cac98a71df",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Door Activity and Danger Alert",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 920,
        "wires": [
            [
                "8712c6c8b19427f5"
            ]
        ]
    },
    {
        "id": "10afb95c20893622",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "danger alert",
        "func": " // replace this line of code\nmsg.topic = \"danger alert (0: no alert, 3: alert sent)\";\n\nmsg.payload = 3;\n// msg.payload = []; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "b0123b7e084a2a5b",
                "24a2ac8fb56493bd",
                "6974bfb26f276d8d"
            ]
        ]
    },
    {
        "id": "f14e941fa9c16ccd",
        "type": "ui_text_input",
        "z": "d8f87e00334234e5",
        "name": "",
        "label": "New password",
        "tooltip": "",
        "group": "87d0df7f7baaf84d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 240,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f304588ab83426",
        "type": "ui_button",
        "z": "d8f87e00334234e5",
        "name": "",
        "group": "87d0df7f7baaf84d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Change password",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1840,
        "wires": [
            [
                "324f4b8474cdfb63"
            ]
        ]
    },
    {
        "id": "9ba7e437ef156964",
        "type": "ui_button",
        "z": "d8f87e00334234e5",
        "name": "",
        "group": "87d0df7f7baaf84d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "msg.payload",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 1900,
        "wires": [
            [
                "d150669599e4cfed"
            ]
        ]
    },
    {
        "id": "97616aa6c7336231",
        "type": "ui_toast",
        "z": "d8f87e00334234e5",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 710,
        "y": 1840,
        "wires": []
    },
    {
        "id": "324f4b8474cdfb63",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "check_pass",
        "func": "// if matches old password\n\n// if valid password, please add if statement \nmsg.topic = \"Password changed\"; \nmsg.payload = \"Congrats! Your password was successfully changed.\"; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1840,
        "wires": [
            [
                "97616aa6c7336231"
            ]
        ]
    },
    {
        "id": "d150669599e4cfed",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "logOut",
        "func": "msg.payload = {\n        \"tab\": \"Login\",\n        \"tabs\": {\n            \"show\": [\"Login\"],\n            \"hide\": [\"Home\"],\n        }\n    };\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1900,
        "wires": [
            [
                "5abb9aaca6abf655"
            ]
        ]
    },
    {
        "id": "5abb9aaca6abf655",
        "type": "ui_ui_control",
        "z": "d8f87e00334234e5",
        "name": "",
        "events": "all",
        "x": 620,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "b6ee238b1ac1ee20",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "5d0355e915f258fe",
        "type": "ui_template",
        "z": "d8f87e00334234e5",
        "group": "e6db27cac98a71df",
        "name": "Log",
        "order": 2,
        "width": 8,
        "height": 4,
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\">\n        <font color=\"red\">{{x.topic}}</font>\n        <ul>\n            <li>{{x.payload}}</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1250,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "57550753e32b1a49",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Login",
        "info": "",
        "x": 190,
        "y": 60,
        "wires": []
    },
    {
        "id": "07c86930d0be159d",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Door Lock Management",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "663a88b6ce147489",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Statistics",
        "info": "",
        "x": 100,
        "y": 840,
        "wires": []
    },
    {
        "id": "921fea17aac532cf",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Personal Info",
        "info": "",
        "x": 210,
        "y": 1660,
        "wires": []
    },
    {
        "id": "14ec3e8fc196b831",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Group Info",
        "info": "",
        "x": 160,
        "y": 1420,
        "wires": []
    },
    {
        "id": "520ffa224335e9e9",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "updateLog",
        "func": "// initialize the counter to [] if flow.get() doesn't exist already\nvar dashboardLog = flow.get('dashboardLog') || [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20) {\n    // delete the first message in array\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n}\n\nflow.set('dashboardLog', dashboardLog);\n\nconsole.log(msg);\nmsg = {}\nmsg.payload = dashboardLog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1200,
        "wires": [
            [
                "5d0355e915f258fe"
            ]
        ]
    },
    {
        "id": "7998a471e1511cb2",
        "type": "mqtt in",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "device/lock_stat",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "0b049713a590f416",
                "58443f746ba0bd63",
                "3c9ce81855c52346",
                "a065950d244cb101"
            ]
        ]
    },
    {
        "id": "0b049713a590f416",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "device lock",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 440,
        "wires": []
    },
    {
        "id": "58443f746ba0bd63",
        "type": "ui_template",
        "z": "d8f87e00334234e5",
        "group": "7ed56f2af3599580",
        "name": "value_style",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "\n<style>\n.nr-dashboard-text.lockVal p.value{\n    font-size: 1.5em;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "label value",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "1d325a11245b81f1"
            ]
        ]
    },
    {
        "id": "d6e1ef25f8f4c60c",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "",
        "info": "## template node\nnr-dashboard-text because we're using this node from dashboard\nmust do .lockVal after nr-dashboard-text because that's the class in text node",
        "x": 380,
        "y": 540,
        "wires": []
    },
    {
        "id": "3c9ce81855c52346",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "set_device_locked",
        "func": "const device_locked = (msg.payload == \"🔒 Locked\" ? true : false); \nflow.set(\"device_locked\", device_locked); \nflow.set(\"prev_lock\", device_locked); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 580,
        "wires": [
            [
                "c0387033870f9a95"
            ]
        ]
    },
    {
        "id": "c0387033870f9a95",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "device & web lock are synced? ",
        "func": "const web_lock = flow.get(\"web_lock\");\nconst device_lock = flow.get(\"device_locked\");\n\nnode.warn(`Web lock: ${web_lock}`); \nnode.warn(`Device lock: ${device_lock}`); \n\nif (web_lock == device_lock){\n    // dont allow changing switch\n    msg.payload = false; \n}\nelse \n    msg.payload = true; \n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "fdba846633055598",
                "c0ccc13556883423"
            ]
        ]
    },
    {
        "id": "fd1496dcf0d29bdc",
        "type": "ui_switch",
        "z": "d8f87e00334234e5",
        "name": "",
        "label": "Lock",
        "tooltip": "",
        "group": "7ed56f2af3599580",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 990,
        "y": 700,
        "wires": [
            [
                "0287d80bc63efdbd",
                "7b80e988d1598815"
            ]
        ]
    },
    {
        "id": "59b0e9c873c0bc4e",
        "type": "ui_numeric",
        "z": "d8f87e00334234e5",
        "name": "",
        "label": "Auto locking",
        "tooltip": "",
        "group": "7ed56f2af3599580",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} minute",
        "min": "1",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "8952e2871072cae7",
        "type": "mqtt out",
        "z": "d8f87e00334234e5",
        "name": "web/lock",
        "topic": "web/lock",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 1340,
        "y": 640,
        "wires": []
    },
    {
        "id": "3abbafb7d09f37d8",
        "type": "ui_toast",
        "z": "d8f87e00334234e5",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 910,
        "y": 840,
        "wires": []
    },
    {
        "id": "5be8a7f89d283fda",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "set_web_lock",
        "func": "flow.set(\"web_lock\", msg.payload); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "fdba846633055598",
        "type": "switch",
        "z": "d8f87e00334234e5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 640,
        "wires": [
            [
                "059eef3aa1ff4c99"
            ]
        ]
    },
    {
        "id": "059eef3aa1ff4c99",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "get lock value",
        "func": "msg.payload = flow.get(\"device_locked\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 640,
        "wires": [
            [
                "fd1496dcf0d29bdc"
            ]
        ]
    },
    {
        "id": "c0ccc13556883423",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 520,
        "wires": []
    },
    {
        "id": "0287d80bc63efdbd",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 620,
        "wires": []
    },
    {
        "id": "b51793160de71d89",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "create lock log",
        "func": "\nmsg.topic = \"Lock status\"; \nconst obj = msg.payload.feeds[0];\nlet dateStr = obj.created_at; \nlet val = obj.field1; \n\n// detect abnormality: maybe data is not written yet\nif (val == \"\") {\n    msg.payload = -1;\n    return msg;\n}\n\n// Split date and time\nlet parts = dateStr.split(\"T\");\nlet date = parts[0];\nlet timeAndOffset = parts[1];\n\n// Remove timezone offset\nvar timeWithoutOffset = timeAndOffset.split(\"+\")[0];\n\n\nmsg.payload = date + \", \" + timeWithoutOffset + (val === \"2\" ? \": Door was unlocked\": \": Door was locked\"); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1200,
        "wires": [
            [
                "520ffa224335e9e9"
            ]
        ]
    },
    {
        "id": "9ed1098141f2ed58",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "Telegram",
        "info": "",
        "x": 180,
        "y": 2020,
        "wires": []
    },
    {
        "id": "403c52d203957039",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "function 10",
        "func": "msg.callback = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2360,
        "wires": [
            [
                "b7d5390de02c41f5"
            ]
        ]
    },
    {
        "id": "b7d5390de02c41f5",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "function 11",
        "func": "if (msg.callback.content == `It's me`) {\n    msg.payload.content = 'Its you';\n}\nif (msg.callback.content == `It's not me!`) {\n    msg.payload.content = 'Its not you';\n}\nif (msg.callback.content == 3) {\n    msg.payload.content = 'Turn off danger mode';\n}\nmsg.payload.type = \"message\";\nmsg.payload.chatId = '6562331656';\n// msg.payload.reply_markup = JSON.stringify({ remove_keyboard: true })\n// msg.payload.reply_markup = JSON.stringify({ inline_keyboard: [] });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2360,
        "wires": [
            [
                "9134a1abf363d2d2",
                "d5ce0c23927c44bd"
            ]
        ]
    },
    {
        "id": "26c217c004ef7714",
        "type": "mqtt in",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "21127089/doorAlert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 2120,
        "wires": [
            [
                "47d870df96daaff7"
            ]
        ]
    },
    {
        "id": "151b01946a58178d",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 2040,
        "wires": []
    },
    {
        "id": "8e62ab63b3a5cb5d",
        "type": "mqtt out",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "21127089/alertReply",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 900,
        "y": 2480,
        "wires": []
    },
    {
        "id": "ea1891746c9a6ca3",
        "type": "mqtt in",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "21127089/dangerModeOpts",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 2500,
        "wires": [
            [
                "41238e480c113c5b"
            ]
        ]
    },
    {
        "id": "41238e480c113c5b",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "function 12",
        "func": "var opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \"keyboard\": [[\n            {\n                \"text\": \"Turn off danger mode\",\n            },\n        ]],\n        \"one_time_keyboard\": true\n    })\n};\nmsg.payload = {};\nmsg.error = false;\nmsg.payload.content = 'Tap to turn off Danger Mode.';\nmsg.payload.options = opts;\nmsg.payload.chatId = '6562331656';\nmsg.payload.type = \"message\";\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2500,
        "wires": [
            [
                "11af81b1fb33145d"
            ]
        ]
    },
    {
        "id": "47d870df96daaff7",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "function 5.1",
        "func": "var opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \"keyboard\": [[\n            {\n                \"text\": \"It's me\",\n            },\n            {\n                \"text\": \"It's not me!\",\n            }\n        ]],\n        \"one_time_keyboard\": true\n    })\n};\nmsg.payload = {};\nmsg.error = false;\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\nmsg.payload.chatId = '6562331656';\nmsg.payload.type = \"message\";\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2120,
        "wires": [
            [
                "5d4231e570bfdd6e"
            ]
        ]
    },
    {
        "id": "551cfbf3f3d1d51e",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 2300,
        "wires": []
    },
    {
        "id": "614f36fe04fae1fc",
        "type": "switch",
        "z": "d8f87e00334234e5",
        "name": "",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "It's me",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "It's not me!",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 2380,
        "wires": [
            [
                "403c52d203957039"
            ],
            [
                "403c52d203957039"
            ]
        ]
    },
    {
        "id": "4392ed0214b00650",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2180,
        "wires": [
            [
                "47d870df96daaff7"
            ]
        ]
    },
    {
        "id": "4c895b3b0c395ddf",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2560,
        "wires": [
            [
                "41238e480c113c5b"
            ]
        ]
    },
    {
        "id": "d5ce0c23927c44bd",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "function 13",
        "func": "msg.payload = msg.payload.content\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2440,
        "wires": [
            [
                "8e62ab63b3a5cb5d"
            ]
        ]
    },
    {
        "id": "2accb8ade221812d",
        "type": "telegram receiver",
        "z": "d8f87e00334234e5",
        "name": "",
        "bot": "16a8eea19b573829",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 110,
        "y": 2360,
        "wires": [
            [
                "551cfbf3f3d1d51e",
                "614f36fe04fae1fc"
            ],
            []
        ]
    },
    {
        "id": "5d4231e570bfdd6e",
        "type": "telegram sender",
        "z": "d8f87e00334234e5",
        "d": true,
        "name": "",
        "bot": "16a8eea19b573829",
        "haserroroutput": false,
        "outputs": 1,
        "x": 590,
        "y": 2120,
        "wires": [
            [
                "151b01946a58178d"
            ]
        ]
    },
    {
        "id": "11af81b1fb33145d",
        "type": "telegram sender",
        "z": "d8f87e00334234e5",
        "name": "",
        "bot": "16a8eea19b573829",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "9134a1abf363d2d2",
        "type": "telegram sender",
        "z": "d8f87e00334234e5",
        "name": "",
        "bot": "16a8eea19b573829",
        "haserroroutput": false,
        "outputs": 1,
        "x": 850,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "c0801f11f5a3f175",
        "type": "ui_text",
        "z": "d8f87e00334234e5",
        "group": "87d0df7f7baaf84d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Username",
        "format": "admin",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 230,
        "y": 1720,
        "wires": []
    },
    {
        "id": "84898f6a01c687d8",
        "type": "mqtt in",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "device/door_not_closed",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 780,
        "wires": [
            [
                "3abbafb7d09f37d8",
                "a3fbe3653e65f229"
            ]
        ]
    },
    {
        "id": "a3fbe3653e65f229",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "turn off lock",
        "func": "msg.payload = false; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 780,
        "wires": [
            [
                "fd1496dcf0d29bdc"
            ]
        ]
    },
    {
        "id": "528278afc7f876e2",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "mqtt in explanation",
        "info": "send notification when door not closed and send command to turn off virtual lock and show noti",
        "x": 650,
        "y": 740,
        "wires": []
    },
    {
        "id": "47a9bcd30c3322a4",
        "type": "mqtt in",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "21127089/doorAlert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "10afb95c20893622",
                "91d769d764b35690"
            ]
        ]
    },
    {
        "id": "24a2ac8fb56493bd",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "turn off alert on chart",
        "func": "msg.topic = \"danger alert (0: no alert, 3: alert sent)\";\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "b0123b7e084a2a5b",
                "b00195a483ca812e"
            ]
        ]
    },
    {
        "id": "8dd012ea800895d2",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "",
        "info": "turn off alert on chart function will be executed in 2 cases: \n 1. On first loaded\n 2. Right after danger alert is sent\n\n Danger alert gets fired and goes through the graph and turn off function at the same time. It will make sure to send 0 signal right after danger alert is triggered.\n Before writing the new lock status to the chart, it writes the old status value",
        "x": 700,
        "y": 960,
        "wires": []
    },
    {
        "id": "2b345528913ac078",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "10afb95c20893622",
                "91d769d764b35690"
            ]
        ]
    },
    {
        "id": "e591c47d589087e6",
        "type": "http request",
        "z": "d8f87e00334234e5",
        "d": true,
        "name": "Write lock",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=RUK1GD4GABD5TQEN&field1={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 720,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "58972588ade27245",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "door lock/unlock",
        "func": "\nlet stat = flow.get(\"device_locked\");\n\nmsg.topic = \"door lock (1: locked, 2: unlocked)\";\nmsg.payload = (stat === true ? 1 : 2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 920,
        "wires": [
            [
                "b0123b7e084a2a5b",
                "e591c47d589087e6",
                "2aca4da1a8f1069d"
            ]
        ]
    },
    {
        "id": "17b1e1d15f48d96f",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "name": "clear chart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "jsonata",
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "b0123b7e084a2a5b"
            ]
        ]
    },
    {
        "id": "1fcb2f5518d4a84d",
        "type": "moment",
        "z": "d8f87e00334234e5",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Ho_Chi_Minh",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "ddd, Do MMM, YYYY, hh:mm:ss",
        "locale": "vi_VN",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Ho_Chi_Minh",
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "7a79f03321bf1181"
            ]
        ]
    },
    {
        "id": "42e181fcde694cf9",
        "type": "inject",
        "z": "d8f87e00334234e5",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1340,
        "wires": [
            [
                "1fcb2f5518d4a84d"
            ]
        ]
    },
    {
        "id": "7a79f03321bf1181",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "get datetime",
        "func": "flow.set(\"datetime\", msg.payload); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "51c6ae3e56d850ab",
        "type": "http request",
        "z": "d8f87e00334234e5",
        "name": "Read lock",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2227143/fields/1.json?api_key=1IPEHQXO7BHRWNUK&results=1&timezone=Asia/Bangkok",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "b51793160de71d89",
                "e8aca99590039370"
            ]
        ]
    },
    {
        "id": "e8aca99590039370",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1240,
        "wires": []
    },
    {
        "id": "63454f1a184e3569",
        "type": "http request",
        "z": "d8f87e00334234e5",
        "name": "Read danger alert",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2227143/fields/2.json?api_key=1IPEHQXO7BHRWNUK&results=2&timezone=Asia/Bangkok",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 1280,
        "wires": [
            [
                "1bd95f1be44fbaef",
                "a71f406d0de7ab0a"
            ]
        ]
    },
    {
        "id": "2aca4da1a8f1069d",
        "type": "delay",
        "z": "d8f87e00334234e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1200,
        "wires": [
            [
                "51c6ae3e56d850ab"
            ]
        ]
    },
    {
        "id": "1bd95f1be44fbaef",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1320,
        "wires": []
    },
    {
        "id": "91d769d764b35690",
        "type": "delay",
        "z": "d8f87e00334234e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "21",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "63454f1a184e3569"
            ]
        ]
    },
    {
        "id": "8712c6c8b19427f5",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 920,
        "wires": []
    },
    {
        "id": "6974bfb26f276d8d",
        "type": "http request",
        "z": "d8f87e00334234e5",
        "d": true,
        "name": "Write danger alert",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=RUK1GD4GABD5TQEN&field2={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "b00195a483ca812e",
        "type": "delay",
        "z": "d8f87e00334234e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "6974bfb26f276d8d",
                "8c34629044b6d409"
            ]
        ]
    },
    {
        "id": "8c34629044b6d409",
        "type": "debug",
        "z": "d8f87e00334234e5",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a71f406d0de7ab0a",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "create alert log",
        "func": "\nmsg.topic = \"Danger alert\"; \nconst obj = msg.payload.feeds[0]; // obj as \"3\" as field2\nlet dateStr = obj.created_at; \nlet val = obj.field2; \n\n// detect abnormality: maybe data is not written yet\nif (val == \"0\" || val == \"\")\n{\n    msg.payload = -1; \n    return msg; \n}\n\n// Split date and time\nlet parts = dateStr.split(\"T\");\nlet date = parts[0];\nlet timeAndOffset = parts[1];\n\n// Remove timezone offset\nvar timeWithoutOffset = timeAndOffset.split(\"+\")[0];\n\nmsg.payload = date + \", \" + timeWithoutOffset + \": Danger alert was sent\"; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1280,
        "wires": [
            [
                "54ed57a417145d9a"
            ]
        ]
    },
    {
        "id": "54ed57a417145d9a",
        "type": "switch",
        "z": "d8f87e00334234e5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "-1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 1280,
        "wires": [
            [
                "520ffa224335e9e9"
            ]
        ]
    },
    {
        "id": "7b80e988d1598815",
        "type": "delay",
        "z": "d8f87e00334234e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1150,
        "y": 700,
        "wires": [
            [
                "8952e2871072cae7",
                "5be8a7f89d283fda"
            ]
        ]
    },
    {
        "id": "bfa5303a6dd25b0a",
        "type": "comment",
        "z": "d8f87e00334234e5",
        "name": "",
        "info": "to prevent messages from getting sent to fast -> infinite loop so we queue messages",
        "x": 1180,
        "y": 740,
        "wires": []
    },
    {
        "id": "a065950d244cb101",
        "type": "function",
        "z": "d8f87e00334234e5",
        "name": "set old lock stat",
        "func": "\nlet stat = flow.get(\"device_locked\");\nstat = !stat; \n\nmsg.topic = \"door lock (1: locked, 2: unlocked)\";\nmsg.payload = (stat === true ? 1 : 2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 840,
        "wires": [
            [
                "58972588ade27245",
                "b0123b7e084a2a5b"
            ]
        ]
    },
    {
        "id": "d86330bc58d8059b",
        "type": "ui_group",
        "name": "login-form",
        "tab": "9774c96daa438e1b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ed56f2af3599580",
        "type": "ui_group",
        "name": "Door Lock Management",
        "tab": "57053d15769f9dca",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f59725da85da0bf6",
        "type": "ui_group",
        "name": "Group Info",
        "tab": "57053d15769f9dca",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6db27cac98a71df",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "57053d15769f9dca",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "87d0df7f7baaf84d",
        "type": "ui_group",
        "name": "Personal Info",
        "tab": "57053d15769f9dca",
        "order": 4,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e609c620bd3749d8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "16a8eea19b573829",
        "type": "telegram bot",
        "botname": "ESPNotification",
        "usernames": "ntkiet",
        "chatids": "6562331656",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "9774c96daa438e1b",
        "type": "ui_tab",
        "name": "Login",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57053d15769f9dca",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]
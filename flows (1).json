[
    {
        "id": "6bfeec6122bbd2e8",
        "type": "tab",
        "label": "Project_CK",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa17fe60a5d661d9",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "Verify Login",
        "func": "if (msg.payload.username === 'admin' && msg.payload.password === 'admin')\n    msg.payload = {\n        \"tab\": \"Home\",\n        \"tabs\": {\n            \"show\": [\"Home\"],\n            \"hide\": [\"Login\"],\n        }\n    };\nelse \n    msg.payload = \"Wrong password or username! Please try again.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 220,
        "wires": [
            [
                "0160502b846a4868",
                "c6f585dc671bf4da"
            ]
        ]
    },
    {
        "id": "0160502b846a4868",
        "type": "ui_ui_control",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "events": "all",
        "x": 720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6593ab0a34ac0974",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "6344178dc98241f2"
            ]
        ]
    },
    {
        "id": "6344178dc98241f2",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "Jump to Login and disable Home",
        "func": "msg.payload = {\n    \"tab\": \"Login\",\n    \"tabs\": {\n        \"hide\": [\"Home\"]\n    }\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "23d62fa39e42bf61"
            ]
        ]
    },
    {
        "id": "23d62fa39e42bf61",
        "type": "ui_ui_control",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "events": "all",
        "x": 820,
        "y": 120,
        "wires": [
            [
                "1107ce73f9a8e779"
            ]
        ]
    },
    {
        "id": "1f608a827fead139",
        "type": "ui_toast",
        "z": "6bfeec6122bbd2e8",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "c6f585dc671bf4da",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "Check if try again msg",
        "func": "if (typeof msg.payload === 'string')\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 320,
        "wires": [
            [
                "1f608a827fead139"
            ]
        ]
    },
    {
        "id": "1570c5f911d206ad",
        "type": "ui_form",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "label": "",
        "group": "d86330bc58d8059b",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "aa17fe60a5d661d9"
            ]
        ]
    },
    {
        "id": "98a657da80328948",
        "type": "ui_text",
        "z": "6bfeec6122bbd2e8",
        "group": "7ed56f2af3599580",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lock status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "lockVal",
        "style": false,
        "font": "",
        "fontSize": "30",
        "color": "#000000",
        "x": 550,
        "y": 500,
        "wires": []
    },
    {
        "id": "22641b6901726cc2",
        "type": "ui_text",
        "z": "6bfeec6122bbd2e8",
        "group": "f59725da85da0bf6",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21CLC03",
        "format": "Group 12",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7b593de99fca81bd",
        "type": "ui_text",
        "z": "6bfeec6122bbd2e8",
        "group": "f59725da85da0bf6",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127089",
        "format": "Nguyễn Tuấn Kiệt (Leader)",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1660,
        "wires": []
    },
    {
        "id": "da60cec070d8532e",
        "type": "ui_text",
        "z": "6bfeec6122bbd2e8",
        "group": "f59725da85da0bf6",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127119",
        "format": "Phạm Ánh Như Ngọc",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cfa0409db1f48856",
        "type": "ui_text",
        "z": "6bfeec6122bbd2e8",
        "group": "f59725da85da0bf6",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "21127620",
        "format": "Trần Hoàng Khải",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8a207440a142e767",
        "type": "ui_chart",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "group": "e6db27cac98a71df",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Door Activity and Danger Alert",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 980,
        "wires": [
            [
                "3c7e4373a24df3af"
            ]
        ]
    },
    {
        "id": "fe1c5a2cbb782f8c",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "danger alert",
        "func": " // replace this line of code\nmsg.topic = \"danger alert (0: no alert, 3: alert sent)\";\n\nmsg.payload = 3;\n// msg.payload = []; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "8a207440a142e767",
                "7b96523c72bb8bfa"
            ]
        ]
    },
    {
        "id": "194f99074858b658",
        "type": "ui_text_input",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "label": "New device password",
        "tooltip": "",
        "group": "87d0df7f7baaf84d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 1920,
        "wires": [
            [
                "aa071aa0adf230d7"
            ]
        ]
    },
    {
        "id": "e3dcc2306077ed9e",
        "type": "ui_button",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "group": "87d0df7f7baaf84d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Change",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pass",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "401374f51e0d0f42"
            ]
        ]
    },
    {
        "id": "6394014e0090d9b2",
        "type": "ui_button",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "group": "87d0df7f7baaf84d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "msg.payload",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2160,
        "wires": [
            [
                "872e4253c987f1aa"
            ]
        ]
    },
    {
        "id": "a268bea2c02ed56d",
        "type": "ui_toast",
        "z": "6bfeec6122bbd2e8",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 990,
        "y": 1980,
        "wires": []
    },
    {
        "id": "bd46f18bb2628c36",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set success msg",
        "func": "// if matches old password\n\n// if valid password, please add if statement \nmsg.topic = \"Password changed\"; \nmsg.payload = \"Congrats! Your password was successfully changed.\"; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1980,
        "wires": [
            [
                "a268bea2c02ed56d"
            ]
        ]
    },
    {
        "id": "872e4253c987f1aa",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "logOut",
        "func": "msg.payload = {\n        \"tab\": \"Login\",\n        \"tabs\": {\n            \"show\": [\"Login\"],\n            \"hide\": [\"Home\"],\n        }\n    };\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2160,
        "wires": [
            [
                "7f9f84ccefb406f7"
            ]
        ]
    },
    {
        "id": "7f9f84ccefb406f7",
        "type": "ui_ui_control",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "1107ce73f9a8e779",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "2a0f1fdc95d008a4",
        "type": "ui_template",
        "z": "6bfeec6122bbd2e8",
        "group": "e6db27cac98a71df",
        "name": "Log",
        "order": 2,
        "width": 8,
        "height": 4,
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\">\n        <font color=\"red\">{{x.topic}}</font>\n        <ul>\n            <li>{{x.payload}}</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "f5aa89c628052414",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Login",
        "info": "",
        "x": 190,
        "y": 60,
        "wires": []
    },
    {
        "id": "152a17d19b24ee9b",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Door Lock Management",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "ce987d8fd622e8f3",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Statistics",
        "info": "",
        "x": 160,
        "y": 880,
        "wires": []
    },
    {
        "id": "cd5cdd1331ad3cd2",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Device setting",
        "info": "",
        "x": 210,
        "y": 1800,
        "wires": []
    },
    {
        "id": "2b5b268525e74717",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Group Info",
        "info": "",
        "x": 160,
        "y": 1560,
        "wires": []
    },
    {
        "id": "0c9ac71a9ef8e5a5",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "device/lock_stat",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "6ed563d829576d45",
                "77c5152483f6b776",
                "b61d7fae53d825bb",
                "7a8c33ccfd49b7d6"
            ]
        ]
    },
    {
        "id": "6ed563d829576d45",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "device lock",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 440,
        "wires": []
    },
    {
        "id": "77c5152483f6b776",
        "type": "ui_template",
        "z": "6bfeec6122bbd2e8",
        "group": "7ed56f2af3599580",
        "name": "value_style",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "\n<style>\n.nr-dashboard-text.lockVal p.value{\n    font-size: 1.5em;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "label value",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "98a657da80328948"
            ]
        ]
    },
    {
        "id": "e40dd8d2aef4540b",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "info": "## template node\nnr-dashboard-text because we're using this node from dashboard\nmust do .lockVal after nr-dashboard-text because that's the class in text node",
        "x": 380,
        "y": 540,
        "wires": []
    },
    {
        "id": "b61d7fae53d825bb",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set_device_locked",
        "func": "const device_locked = (msg.payload == \"🔒 Locked\" ? true : false); \nflow.set(\"device_locked\", device_locked); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 580,
        "wires": [
            [
                "4eec9f0dff98233e"
            ]
        ]
    },
    {
        "id": "4eec9f0dff98233e",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "device & web lock are not synced? ",
        "func": "const web_lock = flow.get(\"web_lock\");\nconst device_lock = flow.get(\"device_locked\");\n\nnode.warn(`Web lock: ${web_lock}`); \nnode.warn(`Device lock: ${device_lock}`); \n\nif (web_lock == device_lock){\n    // dont allow changing switch\n    msg.payload = false; \n}\nelse \n    msg.payload = true; \n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "1908d9635d3282c5",
                "bfbbe26bbfdb658d"
            ]
        ]
    },
    {
        "id": "e89c644e6e2c4afa",
        "type": "ui_switch",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "label": "Lock",
        "tooltip": "",
        "group": "7ed56f2af3599580",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 990,
        "y": 700,
        "wires": [
            [
                "a8903ce42382a174",
                "3e9156de99cd5a62"
            ]
        ]
    },
    {
        "id": "77d7328825807022",
        "type": "mqtt out",
        "z": "6bfeec6122bbd2e8",
        "name": "web/lock",
        "topic": "web/lock",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 1340,
        "y": 640,
        "wires": []
    },
    {
        "id": "759712254001551b",
        "type": "ui_toast",
        "z": "6bfeec6122bbd2e8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 910,
        "y": 840,
        "wires": []
    },
    {
        "id": "f8d99fcd68b2cff0",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set_web_lock",
        "func": "flow.set(\"web_lock\", msg.payload); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1908d9635d3282c5",
        "type": "switch",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 640,
        "wires": [
            [
                "6434b643d78a6a06"
            ]
        ]
    },
    {
        "id": "6434b643d78a6a06",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "get lock value",
        "func": "msg.payload = flow.get(\"device_locked\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 640,
        "wires": [
            [
                "e89c644e6e2c4afa"
            ]
        ]
    },
    {
        "id": "bfbbe26bbfdb658d",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 520,
        "wires": []
    },
    {
        "id": "a8903ce42382a174",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 620,
        "wires": []
    },
    {
        "id": "de1cece6a9f3c50b",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "create logs",
        "func": "const arr = []; \n\nfor (let feed of msg.payload.feeds)\n{\n    let dateStr = feed.created_at;\n    let val = feed.field1;\n    const objLog = {}; \n\n    // // detect abnormality: maybe data is not written yet\n    // if (val === \"\") {\n    //     msg.payload = -1;\n    //     return msg;\n    // }\n\n    let msgLog = \"\";\n    // set topic and log message\n    if (val === \"3\") {\n        objLog.topic = \"Danger alert\";\n        msgLog = \"Danger alert was sent\";\n    }\n\n    else if (val === \"1\" || val === \"2\") {\n        objLog.topic = \"Lock status\";\n        msgLog = (val === \"2\" ? \": Door was unlocked\" : \": Door was locked\");\n    }\n\n    // Split date and time\n    let parts = dateStr.split(\"T\");\n    let date = parts[0];\n    let timeAndOffset = parts[1];\n\n    // Remove timezone offset\n    var timeWithoutOffset = timeAndOffset.split(\"+\")[0];\n\n\n    objLog.payload = date + \", \" + timeWithoutOffset + \" \" + msgLog; \n    arr.push(objLog); \n}\n\nmsg.payload = arr; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1320,
        "wires": [
            [
                "2a0f1fdc95d008a4"
            ]
        ]
    },
    {
        "id": "3dce9ccee0ce1fbc",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "device/door_not_closed",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 780,
        "wires": [
            [
                "759712254001551b",
                "bc9d228219a14f38"
            ]
        ]
    },
    {
        "id": "bc9d228219a14f38",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "turn off lock",
        "func": "msg.payload = false; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 780,
        "wires": [
            [
                "e89c644e6e2c4afa"
            ]
        ]
    },
    {
        "id": "388fb2a76520140e",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "mqtt in explanation",
        "info": "send notification when door not closed and send command to turn off virtual lock and show noti",
        "x": 650,
        "y": 740,
        "wires": []
    },
    {
        "id": "beeaa5790e4c8dd9",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "21127089/doorAlert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1180,
        "wires": [
            [
                "fe1c5a2cbb782f8c"
            ]
        ]
    },
    {
        "id": "7b96523c72bb8bfa",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "turn off alert on chart",
        "func": "msg.topic = \"danger alert (0: no alert, 3: alert sent)\";\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "8a207440a142e767"
            ]
        ]
    },
    {
        "id": "776ae5d92017b3ea",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "info": "turn off alert on chart function will be executed in 2 cases: \n 1. On first loaded\n 2. Right after danger alert is sent\n\n Danger alert gets fired and goes through the graph and turn off function at the same time. It will make sure to send 0 signal right after danger alert is triggered.\n Before writing the new lock status to the chart, it writes the old status value",
        "x": 720,
        "y": 1080,
        "wires": []
    },
    {
        "id": "668eb541c36a8da1",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1220,
        "wires": [
            [
                "fe1c5a2cbb782f8c"
            ]
        ]
    },
    {
        "id": "9d3fe675f3b66e81",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "door lock/unlock",
        "func": "\nlet stat = flow.get(\"device_locked\");\n\nmsg.topic = \"door lock (1: locked, 2: unlocked)\";\nmsg.payload = (stat === true ? 1 : 2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1020,
        "wires": [
            [
                "8a207440a142e767"
            ]
        ]
    },
    {
        "id": "b9b01c4b71aa17d7",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "clear chart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "jsonata",
        "x": 460,
        "y": 1240,
        "wires": [
            [
                "8a207440a142e767"
            ]
        ]
    },
    {
        "id": "67bb1f4efc81ff69",
        "type": "http request",
        "z": "6bfeec6122bbd2e8",
        "name": "Read cloud",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2227143/fields/1.json?api_key=1IPEHQXO7BHRWNUK&results=20&timezone=Asia/Bangkok",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "de1cece6a9f3c50b",
                "32337def7d0586a6"
            ]
        ]
    },
    {
        "id": "32337def7d0586a6",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3c7e4373a24df3af",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3e9156de99cd5a62",
        "type": "delay",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1150,
        "y": 700,
        "wires": [
            [
                "77d7328825807022",
                "f8d99fcd68b2cff0"
            ]
        ]
    },
    {
        "id": "a98dc336a941202c",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "info": "to prevent messages from getting sent to fast -> infinite loop so we queue messages",
        "x": 1180,
        "y": 740,
        "wires": []
    },
    {
        "id": "7a8c33ccfd49b7d6",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set old lock stat",
        "func": "\nlet stat = flow.get(\"device_locked\");\nstat = !stat; \n\nmsg.topic = \"door lock (1: locked, 2: unlocked)\";\nmsg.payload = (stat === true ? 1 : 2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 940,
        "wires": [
            [
                "9d3fe675f3b66e81",
                "8a207440a142e767"
            ]
        ]
    },
    {
        "id": "ed88bc8942e92c99",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "on-start device",
        "topic": "21127119/device_activated",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2220,
        "wires": [
            [
                "da1fd1cb76155040"
            ]
        ]
    },
    {
        "id": "da1fd1cb76155040",
        "type": "file in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "filename": "C:\\IOT\\pass.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 2220,
        "wires": [
            [
                "eda86e9c778c6d9a",
                "61b685dce7b45d78"
            ]
        ]
    },
    {
        "id": "eda86e9c778c6d9a",
        "type": "mqtt out",
        "z": "6bfeec6122bbd2e8",
        "name": "pub password",
        "topic": "21127119/pass",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 620,
        "y": 2220,
        "wires": []
    },
    {
        "id": "aa071aa0adf230d7",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set pass",
        "func": "flow.set(\"pass\", msg.payload); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "face14628e2f6043",
        "type": "file",
        "z": "6bfeec6122bbd2e8",
        "name": "write new pass",
        "filename": "C:\\IOT\\pass.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 880,
        "y": 2040,
        "wires": [
            [
                "7da94db8f2e7f055",
                "5dddc6ee808f9bba"
            ]
        ]
    },
    {
        "id": "401374f51e0d0f42",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "check pass",
        "func": "let pass = msg.payload; \n\n// tối đa 16 ký tự\nif (pass.length === \"\" || pass.length > 16){\n    msg.payload = false; \n    return msg;  \n}\n\n// phải là số\nfor (let c of pass){\n    if (c < '0' || c > '9'){\n        msg.payload = false;\n        return msg;  \n    }\n}\n\nmsg.payload = true; \nflow.set(\"pass\", pass); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1980,
        "wires": [
            [
                "fe315a82bce565f0",
                "6e16a31096cbcf49"
            ]
        ]
    },
    {
        "id": "fe315a82bce565f0",
        "type": "switch",
        "z": "6bfeec6122bbd2e8",
        "name": "pass valid",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 1980,
        "wires": [
            [
                "bd46f18bb2628c36",
                "c8bd34ce9ab47da6"
            ]
        ]
    },
    {
        "id": "7da94db8f2e7f055",
        "type": "mqtt out",
        "z": "6bfeec6122bbd2e8",
        "name": "pub password",
        "topic": "21127119/pass",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 1100,
        "y": 2040,
        "wires": []
    },
    {
        "id": "6e16a31096cbcf49",
        "type": "switch",
        "z": "6bfeec6122bbd2e8",
        "name": "pass invalid",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 2100,
        "wires": [
            [
                "d65ac77a7eace32e"
            ]
        ]
    },
    {
        "id": "10476c76d779731a",
        "type": "ui_toast",
        "z": "6bfeec6122bbd2e8",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1050,
        "y": 2100,
        "wires": []
    },
    {
        "id": "d65ac77a7eace32e",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "set fail msg",
        "func": "\nmsg.topic = \"Invalid password\"; \nmsg.payload = \"Cant change password\"; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 2100,
        "wires": [
            [
                "10476c76d779731a"
            ]
        ]
    },
    {
        "id": "5dddc6ee808f9bba",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1920,
        "wires": []
    },
    {
        "id": "61b685dce7b45d78",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 2280,
        "wires": []
    },
    {
        "id": "c8bd34ce9ab47da6",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "retrieve pass",
        "func": "msg.payload = flow.get(\"pass\"); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2040,
        "wires": [
            [
                "face14628e2f6043"
            ]
        ]
    },
    {
        "id": "4f35afc3b1e0d0a0",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "Always update log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1320,
        "wires": [
            [
                "67bb1f4efc81ff69"
            ]
        ]
    },
    {
        "id": "6d9081c21e23cd62",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "Empty log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 1420,
        "wires": [
            [
                "65c7b65a5f6042d8"
            ]
        ]
    },
    {
        "id": "65c7b65a5f6042d8",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "updateLog",
        "func": "msg.payload = []; \nflow.set('dashboardLog', []);  \nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1420,
        "wires": [
            [
                "2a0f1fdc95d008a4"
            ]
        ]
    },
    {
        "id": "ddcc9db9cb5d3008",
        "type": "mqtt out",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "time/time_out",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e8dcd7847cd87e9d",
        "x": 500,
        "y": 700,
        "wires": []
    },
    {
        "id": "e42d9cfa438023cc",
        "type": "ui_numeric",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "label": "Auto locking",
        "tooltip": "",
        "group": "7ed56f2af3599580",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} minute",
        "min": "1",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "ddcc9db9cb5d3008"
            ]
        ]
    },
    {
        "id": "fb3bc93294c762b3",
        "type": "comment",
        "z": "6bfeec6122bbd2e8",
        "name": "Telegram",
        "info": "",
        "x": 160,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6602efa89b5aa0b3",
        "type": "telegram sender",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "bot": "c02213771d929471",
        "haserroroutput": false,
        "outputs": 1,
        "x": 570,
        "y": 2480,
        "wires": [
            [
                "25125d906166b230"
            ]
        ]
    },
    {
        "id": "69847088dd335dae",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "function 15",
        "func": "let userRep = msg.payload.content;\n\nif (userRep === \"It's me\")\n    msg.payload = \"Ok. Keypad is re-enabled.\";\nelse if (userRep === \"It's not me\")\n    msg.payload = \"Danger mode is on.\";\nelse if (userRep === \"Turn off danger mode\")\n    msg.payload = \"Ok. Your device went back to normal.\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "6939ce4dfe9c2d0b",
                "44f9f2c221bea9ed",
                "b775390baccd0faa",
                "d04a62ce68ea150c"
            ]
        ]
    },
    {
        "id": "c88211b124f54ae2",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "d": true,
        "name": "function 16",
        "func": "if (msg.callback.content == `It's me`) {\n    msg.payload.content = `It's me`;\n}\nif (msg.callback.content == `It's not me`) {\n    msg.payload.content = `It's not me`\n}\nif (msg.callback.content == 3) {\n    msg.payload.content = 'Turn off danger mode';\n}\nmsg.payload.type = \"message\";\nmsg.payload.chatId = '6562331656';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "7a36dbf8c11d5f6b",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "21127089/doorAlert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 2480,
        "wires": [
            [
                "43b7a3d9c8533b7b"
            ]
        ]
    },
    {
        "id": "25125d906166b230",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2420,
        "wires": []
    },
    {
        "id": "44f9f2c221bea9ed",
        "type": "mqtt out",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "21127089/alertReply",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e609c620bd3749d8",
        "x": 880,
        "y": 2840,
        "wires": []
    },
    {
        "id": "76a245480c1768ee",
        "type": "mqtt in",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "topic": "21127089/dangerModeOpts",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e609c620bd3749d8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2860,
        "wires": [
            [
                "acae83cb14083a77"
            ]
        ]
    },
    {
        "id": "acae83cb14083a77",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "function 17",
        "func": "var opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \"keyboard\": [[\n            {\n                \"text\": \"Turn off danger mode\",\n            },\n        ]],\n        \"one_time_keyboard\": true\n    })\n};\nmsg.payload = {};\nmsg.error = false;\nmsg.payload.content = 'Tap to turn off Danger Mode.';\nmsg.payload.options = opts;\nmsg.payload.chatId = '5568748632';\nmsg.payload.type = \"message\";\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2860,
        "wires": [
            [
                "fa4fd2ccc80d7acc"
            ]
        ]
    },
    {
        "id": "fa4fd2ccc80d7acc",
        "type": "telegram sender",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "bot": "c02213771d929471",
        "haserroroutput": false,
        "outputs": 1,
        "x": 610,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "43b7a3d9c8533b7b",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "function 5.1",
        "func": "var opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \"keyboard\": [[\n            {\n                \"text\": \"It's me\",\n            },\n            {\n                \"text\": \"It's not me\",\n            }\n        ]],\n        \"one_time_keyboard\": true\n    })\n};\nmsg.payload = {};\nmsg.error = false;\nmsg.payload.content = 'You have entered the wrong password too many times. Is this you?';\nmsg.payload.options = opts;\nmsg.payload.chatId = '5568748632';\nmsg.payload.type = \"message\";\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2480,
        "wires": [
            [
                "6602efa89b5aa0b3"
            ]
        ]
    },
    {
        "id": "ff49c91388a8b44e",
        "type": "telegram receiver",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "bot": "c02213771d929471",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 90,
        "y": 2720,
        "wires": [
            [
                "9dee017c4f01bdad",
                "2bbaf1e8304f5317"
            ],
            []
        ]
    },
    {
        "id": "9dee017c4f01bdad",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 2660,
        "wires": []
    },
    {
        "id": "2bbaf1e8304f5317",
        "type": "switch",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "It's me",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "It's not me",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Turn off danger mode",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 2740,
        "wires": [
            [
                "69847088dd335dae"
            ],
            [
                "69847088dd335dae"
            ],
            [
                "69847088dd335dae"
            ]
        ]
    },
    {
        "id": "a189f91db6dcbcee",
        "type": "telegram sender",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "bot": "c02213771d929471",
        "haserroroutput": false,
        "outputs": 1,
        "x": 890,
        "y": 2720,
        "wires": [
            [
                "30ea4d92249237c4"
            ]
        ]
    },
    {
        "id": "c390249f30901d6e",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 2540,
        "wires": [
            [
                "43b7a3d9c8533b7b"
            ]
        ]
    },
    {
        "id": "8af4425d0ba6509b",
        "type": "inject",
        "z": "6bfeec6122bbd2e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2920,
        "wires": [
            [
                "acae83cb14083a77"
            ]
        ]
    },
    {
        "id": "6939ce4dfe9c2d0b",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "d": true,
        "name": "function 18",
        "func": "let userRep = msg.payload.content; \n\nif (userRep === \"It's me\")\n    msg.payload = \"Ok. Keypad is re-enabled\";\nelse if (userRep === \"It's not me\")\n    msg.payload = \"Danger mode is on.\";\nelse if (userRep === \"Turn off danger mode\")\n    msg.payload = \"Ok. Your device went back to normal.\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 2800,
        "wires": [
            [
                "44f9f2c221bea9ed",
                "b775390baccd0faa"
            ]
        ]
    },
    {
        "id": "b775390baccd0faa",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 2920,
        "wires": []
    },
    {
        "id": "30ea4d92249237c4",
        "type": "debug",
        "z": "6bfeec6122bbd2e8",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2640,
        "wires": []
    },
    {
        "id": "d04a62ce68ea150c",
        "type": "function",
        "z": "6bfeec6122bbd2e8",
        "name": "function 19",
        "func": "let rep = msg.payload; \n\nmsg.payload = {};\nmsg.payload.content = rep; \nmsg.payload.chatId = '5568748632';\nmsg.payload.type = \"message\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2720,
        "wires": [
            [
                "a189f91db6dcbcee"
            ]
        ]
    },
    {
        "id": "d86330bc58d8059b",
        "type": "ui_group",
        "name": "login-form",
        "tab": "9774c96daa438e1b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ed56f2af3599580",
        "type": "ui_group",
        "name": "Door Lock Management",
        "tab": "57053d15769f9dca",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f59725da85da0bf6",
        "type": "ui_group",
        "name": "Group Info",
        "tab": "57053d15769f9dca",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6db27cac98a71df",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "57053d15769f9dca",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "87d0df7f7baaf84d",
        "type": "ui_group",
        "name": "Device Setting",
        "tab": "57053d15769f9dca",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e609c620bd3749d8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e8dcd7847cd87e9d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c02213771d929471",
        "type": "telegram bot",
        "botname": "smart_lock_bot",
        "usernames": "zeldaxzuoey",
        "chatids": "5568748632",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "9774c96daa438e1b",
        "type": "ui_tab",
        "name": "Login",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57053d15769f9dca",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]